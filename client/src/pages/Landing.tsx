import { useState, useEffect, useRef } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  Github, 
  Calendar, 
  Mail,
  FileText,
  BarChart3,
  ArrowRight,
  CheckCircle,
  Zap,
  Shield,
  Users,
  Clock,
  Bot,
  Sparkles,
  Star,
  TrendingUp,
  Globe,
  Smartphone,
  Lock,
  Rocket,
  Moon,
  Sun,
  MessageSquare,
  Activity,
  Target,
  Award
} from "lucide-react";
import { Link } from "wouter";
import { motion, useScroll, useTransform, useInView, AnimatePresence } from "framer-motion";
import { useAuth } from "@/contexts/AuthContext";
import { SiGithub, SiGooglecalendar, SiSlack, SiJira, SiNotion } from "react-icons/si";
import autoBriefLogo from "@/assets/autobrief-logo.png";

const Landing = () => {
  const [isDarkMode, setIsDarkMode] = useState(false);
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });
  const [stats, setStats] = useState({
    activeUsers: 0,
    uptime: "99.9%",
    userRating: "4.9/5"
  });
  const { currentUser, logout } = useAuth();
  const heroRef = useRef(null);
  const featuresRef = useRef(null);
  const { scrollYProgress } = useScroll();
  const y = useTransform(scrollYProgress, [0, 1], ["0%", "50%"]);
  const opacity = useTransform(scrollYProgress, [0, 0.5], [1, 0]);

  const isHeroInView = useInView(heroRef, { once: true });
  const isFeaturesInView = useInView(featuresRef, { once: true });

  useEffect(() => {
    const isDark = document.documentElement.classList.contains('dark');
    setIsDarkMode(isDark);
    
    // Fetch real stats
    fetchStats();
  }, []);

  const fetchStats = async () => {
    try {
      const response = await fetch('/api/analytics/1');
      if (response.ok) {
        const data = await response.json();
        setStats({
          activeUsers: data.weeklyStats?.totalActivities || 0,
          uptime: "99.9%",
          userRating: "4.9/5"
        });
      }
    } catch (error) {
      console.error('Failed to fetch stats:', error);
    }
  };

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({ x: e.clientX, y: e.clientY });
    };
    window.addEventListener('mousemove', handleMouseMove);
    return () => window.removeEventListener('mousemove', handleMouseMove);
  }, []);

  const toggleTheme = () => {
    setIsDarkMode(!isDarkMode);
    document.documentElement.classList.toggle('dark');
  };

  const features = [
    {
      icon: Bot,
      title: "AI-Powered Summaries",
      description: "Get intelligent daily briefs generated by advanced AI that understands your work patterns.",
      gradient: "from-purple-500 to-pink-500",
    },
    {
      icon: Zap,
      title: "Real-time Sync",
      description: "Instant synchronization across all your favorite tools and platforms.",
      gradient: "from-blue-500 to-cyan-500",
    },
    {
      icon: Shield,
      title: "Enterprise Security",
      description: "Bank-level encryption and security protocols to keep your data safe.",
      gradient: "from-green-500 to-emerald-500",
    },
    {
      icon: Target,
      title: "Smart Analytics",
      description: "Deep insights into your productivity patterns and team performance.",
      gradient: "from-orange-500 to-red-500",
    }
  ];

  const integrations = [
    { name: "GitHub", icon: SiGithub, color: "bg-gray-900 dark:bg-white", iconColor: "text-white dark:text-gray-900" },
    { name: "Slack", icon: SiSlack, color: "bg-purple-600", iconColor: "text-white" },
    { name: "Google Calendar", icon: SiGooglecalendar, color: "bg-blue-600", iconColor: "text-white" },
    { name: "Jira", icon: SiJira, color: "bg-blue-500", iconColor: "text-white" },
    { name: "Notion", icon: SiNotion, color: "bg-black dark:bg-white", iconColor: "text-white dark:text-black" },
  ];

  const displayStats = [
    { number: stats.activeUsers > 0 ? `${stats.activeUsers}+` : "Loading...", label: "Active Users", icon: Users },
    { number: stats.uptime, label: "Uptime", icon: Activity },
    { number: stats.userRating, label: "User Rating", icon: Star }
  ];



  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-white to-blue-50 dark:from-slate-900 dark:via-slate-800 dark:to-blue-900 overflow-hidden">
      {/* Animated Background Elements */}
      <div className="fixed inset-0 overflow-hidden pointer-events-none">
        <motion.div
          className="absolute top-1/4 left-1/4 w-96 h-96 bg-purple-200 dark:bg-purple-800 rounded-full mix-blend-multiply dark:mix-blend-lighten filter blur-xl opacity-30"
          animate={{
            x: mousePosition.x * 0.02,
            y: mousePosition.y * 0.02,
          }}
          transition={{ type: "spring", stiffness: 50 }}
        />
        <motion.div
          className="absolute top-1/3 right-1/4 w-96 h-96 bg-blue-200 dark:bg-blue-800 rounded-full mix-blend-multiply dark:mix-blend-lighten filter blur-xl opacity-30"
          animate={{
            x: mousePosition.x * -0.02,
            y: mousePosition.y * 0.03,
          }}
          transition={{ type: "spring", stiffness: 50 }}
        />
        <motion.div
          className="absolute bottom-1/4 left-1/3 w-96 h-96 bg-pink-200 dark:bg-pink-800 rounded-full mix-blend-multiply dark:mix-blend-lighten filter blur-xl opacity-30"
          animate={{
            x: mousePosition.x * 0.015,
            y: mousePosition.y * -0.02,
          }}
          transition={{ type: "spring", stiffness: 50 }}
        />
      </div>

      {/* Header */}
      <motion.header 
        className="container mx-auto px-6 py-4 relative z-50"
        initial={{ y: -100, opacity: 0 }}
        animate={{ y: 0, opacity: 1 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
      >
        <nav className="flex items-center justify-between backdrop-blur-lg bg-white/80 dark:bg-slate-900/80 rounded-2xl px-6 py-3 border border-white/20 shadow-xl">
          <Link to="/">
            <motion.img 
              src={autoBriefLogo} 
              alt="AutoBrief" 
              className="h-24 w-48 object-contain cursor-pointer filter dark:brightness-0 dark:invert"
              whileHover={{ scale: 1.05 }}
              transition={{ type: "spring", stiffness: 400 }}
            />
          </Link>

          <div className="flex items-center gap-6">
            <motion.div whileHover={{ scale: 1.1 }} whileTap={{ scale: 0.9 }}>
              <Button
                variant="ghost"
                size="sm"
                onClick={toggleTheme}
                className="rounded-full h-10 w-10 p-0"
              >
                {isDarkMode ? <Sun className="h-4 w-4" /> : <Moon className="h-4 w-4" />}
              </Button>
            </motion.div>
            
            {currentUser ? (
              <div className="flex items-center gap-3">
                <Link to="/dashboard">
                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                    <Button variant="ghost" className="font-medium">
                      Dashboard
                    </Button>
                  </motion.div>
                </Link>
                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                  <Button 
                    variant="outline" 
                    onClick={logout}
                    className="font-medium"
                  >
                    Sign Out
                  </Button>
                </motion.div>
              </div>
            ) : (
              <div className="flex items-center gap-3">
                <Link to="/auth/login">
                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                    <Button variant="ghost" className="font-medium">
                      Sign In
                    </Button>
                  </motion.div>
                </Link>
                <Link to="/auth/signup">
                  <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                    <Button className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white font-medium px-6 rounded-full shadow-lg">
                      Get Started
                    </Button>
                  </motion.div>
                </Link>
              </div>
            )}
          </div>
        </nav>
      </motion.header>

      {/* Hero Section */}
      <motion.section 
        ref={heroRef}
        className="container mx-auto px-6 py-20 text-center relative z-40"
        style={{ y, opacity }}
      >
        <AnimatePresence>
          {isHeroInView && (
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 1, ease: "easeOut" }}
            >
              <motion.div
                initial={{ scale: 0 }}
                animate={{ scale: 1 }}
                transition={{ delay: 0.2, type: "spring", stiffness: 200 }}
              >
                <Badge className="mb-8 bg-gradient-to-r from-purple-100 to-blue-100 dark:from-purple-900 dark:to-blue-900 text-purple-700 dark:text-purple-300 border-purple-200 dark:border-purple-700 px-6 py-2 text-sm font-medium">
                  <Sparkles className="h-4 w-4 mr-2" />
                  AI-Powered Work Intelligence Platform
                </Badge>
              </motion.div>
              
              <motion.h1 
                className="text-6xl md:text-8xl font-bold mb-8 leading-tight"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.4, duration: 0.8 }}
              >
                <span className="bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 bg-clip-text text-transparent">
                  Transform
                </span>
                <br />
                <span className="text-slate-900 dark:text-white">Your Remote Work</span>
              </motion.h1>
              
              <motion.p 
                className="text-xl md:text-2xl text-slate-600 dark:text-slate-300 max-w-4xl mx-auto mb-12 leading-relaxed"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.6, duration: 0.8 }}
              >
                AutoBrief AI automatically generates <span className="font-semibold text-purple-600 dark:text-purple-400">intelligent daily summaries</span> of your work across all platforms. Keep your team synchronized with AI-powered insights delivered seamlessly.
              </motion.p>
              
              <motion.div 
                className="flex flex-col sm:flex-row gap-6 justify-center items-center mb-16"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.8, duration: 0.8 }}
              >
                <Link to="/auth/signup">
                  <motion.div
                    whileHover={{ scale: 1.05, y: -2 }}
                    whileTap={{ scale: 0.95 }}
                  >
                    <Button size="lg" className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 text-white px-10 py-4 text-lg rounded-full shadow-2xl">
                      Start Free Trial
                      <ArrowRight className="h-5 w-5 ml-2" />
                    </Button>
                  </motion.div>
                </Link>
                

              </motion.div>

              {/* Stats */}
              <motion.div 
                className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-3xl mx-auto"
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 1, duration: 0.8 }}
              >
                {displayStats.map((stat, index) => (
                  <motion.div
                    key={stat.label}
                    className="text-center"
                    initial={{ opacity: 0, scale: 0.5 }}
                    animate={{ opacity: 1, scale: 1 }}
                    transition={{ delay: 1.2 + index * 0.1, type: "spring", stiffness: 200 }}
                  >
                    <div className="flex items-center justify-center mb-2">
                      <stat.icon className="h-6 w-6 text-purple-600 dark:text-purple-400 mr-2" />
                      <span className="text-3xl md:text-4xl font-bold text-slate-900 dark:text-white">
                        {stat.number}
                      </span>
                    </div>
                    <p className="text-slate-600 dark:text-slate-300 font-medium">{stat.label}</p>
                  </motion.div>
                ))}
              </motion.div>
            </motion.div>
          )}
        </AnimatePresence>
      </motion.section>

      {/* Features Section */}
      <motion.section 
        id="features"
        ref={featuresRef}
        className="container mx-auto px-6 py-20 relative z-30"
      >
        <AnimatePresence>
          {isFeaturesInView && (
            <>
              <motion.div 
                className="text-center mb-20"
                initial={{ opacity: 0, y: 50 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8 }}
              >
                <h2 className="text-5xl md:text-6xl font-bold mb-6">
                  <span className="bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
                    Powerful Features
                  </span>
                </h2>
                <p className="text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto">
                  Everything you need to streamline your remote work and boost team productivity.
                </p>
              </motion.div>
              
              <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
                {features.map((feature, index) => (
                  <motion.div
                    key={feature.title}
                    initial={{ opacity: 0, y: 50 }}
                    animate={{ opacity: 1, y: 0 }}
                    transition={{ delay: index * 0.2, duration: 0.8 }}
                    whileHover={{ y: -10, scale: 1.02 }}
                  >
                    <Card className="h-full hover:shadow-2xl transition-all duration-500 backdrop-blur-lg bg-white/80 dark:bg-slate-800/80 border-white/20 overflow-hidden group">
                      <CardContent className="p-8 text-center relative">
                        <motion.div 
                          className={`w-16 h-16 bg-gradient-to-r ${feature.gradient} rounded-2xl flex items-center justify-center mx-auto mb-6 shadow-lg`}
                          whileHover={{ rotate: 360 }}
                          transition={{ duration: 0.6 }}
                        >
                          <feature.icon className="h-8 w-8 text-white" />
                        </motion.div>
                        <h3 className="text-xl font-bold mb-4 text-slate-900 dark:text-white">{feature.title}</h3>
                        <p className="text-slate-600 dark:text-slate-300 leading-relaxed">{feature.description}</p>
                        
                        {/* Hover Effect */}
                        <motion.div
                          className="absolute inset-0 bg-gradient-to-r from-purple-500/10 to-blue-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                          initial={{ scale: 0 }}
                          whileHover={{ scale: 1 }}
                        />
                      </CardContent>
                    </Card>
                  </motion.div>
                ))}
              </div>
            </>
          )}
        </AnimatePresence>
      </motion.section>

      {/* Integrations Section */}
      <section className="bg-gradient-to-r from-slate-50 to-blue-50 dark:from-slate-800 dark:to-blue-900 py-20">
        <div className="container mx-auto px-6">
          <motion.div 
            className="text-center mb-16"
            initial={{ opacity: 0, y: 50 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl md:text-5xl font-bold mb-6">
              <span className="bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
                Seamless Integrations
              </span>
            </h2>
            <p className="text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto">
              Connect with the tools you already love and use every day.
            </p>
          </motion.div>

          <motion.div 
            className="flex flex-wrap justify-center items-center gap-8"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.8 }}
            viewport={{ once: true }}
          >
            {integrations.map((integration, index) => (
              <motion.div 
                key={integration.name}
                className="flex items-center gap-4 p-6 rounded-2xl backdrop-blur-lg bg-white/80 dark:bg-slate-800/80 border border-white/20 shadow-xl"
                initial={{ opacity: 0, scale: 0.5 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ delay: index * 0.1, type: "spring", stiffness: 200 }}
                whileHover={{ scale: 1.05, y: -5 }}
                viewport={{ once: true }}
              >
                <div className={`w-12 h-12 rounded-xl ${integration.color} flex items-center justify-center shadow-lg`}>
                  <integration.icon className={`h-6 w-6 ${integration.iconColor}`} />
                </div>
                <span className="font-semibold text-slate-900 dark:text-white text-lg">{integration.name}</span>
              </motion.div>
            ))}
          </motion.div>
        </div>
      </section>



      {/* CTA Section */}
      <section className="bg-gradient-to-r from-purple-600 via-blue-600 to-cyan-600 text-white py-20 relative overflow-hidden">
        <div className="absolute inset-0 bg-black/20" />
        <motion.div 
          className="container mx-auto px-6 text-center relative z-10"
          initial={{ opacity: 0, y: 50 }}
          whileInView={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.8 }}
          viewport={{ once: true }}
        >
          <motion.h2 
            className="text-4xl md:text-6xl font-bold mb-6"
            initial={{ scale: 0.5 }}
            whileInView={{ scale: 1 }}
            transition={{ type: "spring", stiffness: 200 }}
            viewport={{ once: true }}
          >
            Ready to Get Started?
          </motion.h2>
          <p className="text-xl text-purple-100 mb-12 max-w-3xl mx-auto">
            Join thousands of teams who have transformed their remote work with AutoBrief AI.
          </p>
          <div className="flex flex-col sm:flex-row gap-6 justify-center items-center">
            <Link to="/auth/signup">
              <motion.div
                whileHover={{ scale: 1.05, y: -2 }}
                whileTap={{ scale: 0.95 }}
              >
                <Button size="lg" variant="secondary" className="bg-white text-purple-600 hover:bg-gray-100 px-10 py-4 text-lg rounded-full shadow-2xl">
                  Start Free Trial
                  <Rocket className="h-5 w-5 ml-2" />
                </Button>
              </motion.div>
            </Link>
            <motion.div
              whileHover={{ scale: 1.05, y: -2 }}
              whileTap={{ scale: 0.95 }}
            >
              <Button size="lg" variant="outline" className="border-white text-white hover:bg-white hover:text-purple-600 px-10 py-4 text-lg rounded-full backdrop-blur-sm">
                <MessageSquare className="h-5 w-5 mr-2" />
                Contact Sales
              </Button>
            </motion.div>
          </div>
        </motion.div>
      </section>

      {/* Footer */}
      <footer className="bg-slate-900 dark:bg-black text-white py-16">
        <div className="container mx-auto px-6">
          <div className="grid md:grid-cols-4 gap-8 mb-8">
            <div>
              <motion.img 
                src={autoBriefLogo} 
                alt="AutoBrief" 
                className="h-12 w-20 object-contain mb-4 filter brightness-0 invert"
                whileHover={{ scale: 1.05 }}
              />
              <p className="text-slate-300 text-sm leading-relaxed">
                AI-powered work summaries for the modern remote team.
              </p>
            </div>
            <div>
              <h3 className="font-semibold mb-4 text-lg">Product</h3>
              <ul className="space-y-3 text-sm text-slate-300">
                <li><a href="#features" className="hover:text-white transition-colors">Features</a></li>
                <li><Link to="/dashboard" className="hover:text-white transition-colors">Dashboard</Link></li>
                <li><a href="#" className="hover:text-white transition-colors">Pricing</a></li>
                <li><a href="#" className="hover:text-white transition-colors">API</a></li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4 text-lg">Company</h3>
              <ul className="space-y-3 text-sm text-slate-300">
                <li><a href="#" className="hover:text-white transition-colors">About</a></li>
                <li><a href="#" className="hover:text-white transition-colors">Blog</a></li>
                <li><Link to="/contact" className="hover:text-white transition-colors">Contact</Link></li>
                <li><a href="#" className="hover:text-white transition-colors">Careers</a></li>
              </ul>
            </div>
            <div>
              <h3 className="font-semibold mb-4 text-lg">Legal</h3>
              <ul className="space-y-3 text-sm text-slate-300">
                <li><Link to="/privacy" className="hover:text-white transition-colors">Privacy Policy</Link></li>
                <li><Link to="/terms" className="hover:text-white transition-colors">Terms of Service</Link></li>
                <li><a href="#" className="hover:text-white transition-colors">Cookie Policy</a></li>
              </ul>
            </div>
          </div>
          <div className="border-t border-slate-700 pt-8 text-center">
            <p className="text-slate-400 text-sm">
              &copy; 2025 AutoBrief. All rights reserved. Built with ❤️ for remote teams.
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Landing;